name: 'github/project-field-set'

description: Sets field of an GitHub project item

inputs:
  project-id:
    description: "ID of the project"
  value: ${{ steps.gh-api-add-to-project.outputs.project-id }}
  item-id:
    description: "ID of item in the project"
    value: ${{ steps.gh-api-add-to-project.outputs.item-id }}
  github-token:
    description: 'The GitHub access token.'
    default: ${{ github.token }}
    required: true
  field-name:
    description: 'Field name'
    required: true
  field-value:
    description: 'Field value, when "field-iteration" = true the current iteration is used'
    required: false
  field-iteration:
    description: 'Must be set to "true" for iteration fields'
    type: boolean
    default: false

runs:
  using: "composite"
  steps:
    - name: Set select field value of project item
      id: gh-api-project-select-field-value
      if: ${{ !inputs.field-iteration }}
      shell: bash
      run: |
        field_json=$(gh api graphql -f query='query($project_id:ID!){ node(id:$project_id){ ... on ProjectV2 { fields(first:20) { nodes { ... on ProjectV2SingleSelectField { id name options { id name } } } } } } }' --jq ".data.node.fields.nodes[]|select(.name=='$FIELD_NAME')" -F project_id=${PROJECT_ID})
        field_id=$( echo "$field_json" | jq -r '.id' )
        field_value_id=$( echo "$field_json" | jq -r ".options[]|select(.name==\"${FIELD_VALUE}\")|.id" )
        gh project item-edit --id "${ITEM_ID}" --project-id "${PROJECT_ID}" --field-id "${field_id}" --single-select-option-id "${field_value_id}"
      env:
        GH_TOKEN: ${{ inputs.github-token }}
        PROJECT_ID: ${{ inputs.project-id }}
        ITEM_ID: ${{ inputs.item-id }}
        FIELD_NAME: ${{ inputs.field-name }}
        FIELD_VALUE: ${{ inputs.field-value }}

    - name: Set iteration field value of project item
      id: gh-api-project-iteration-field-value
      if: ${{ inputs.field-iteration }}
      shell: bash
      run: |
        field_json=$(gh api graphql -f query='query($project_id:ID!){ node(id:$project_id) { ... on ProjectV2 { fields(first: 20) { nodes { ... on ProjectV2IterationField { id name configuration { iterations { startDate id } } } } } } } }' --jq ".data.node.fields.nodes[]|select(.name=='$FIELD_NAME')" -F project_id=${PROJECT_ID})
        field_id=$(echo "$field_json" | jq -r '.id' )
        field_value_id=$(echo "$field_json" | jq -r 'last(.configuration.iterations[]|select(.startDate<=(now|strftime("%Y-%m-%d"))))|.id')
        gh project item-edit --id "${item_id}" --project-id "${project_id}" --field-id "${field_id}" --iteration-id "${field_value_id}"
      env:
        GH_TOKEN: ${{ inputs.github-token }}
        PROJECT_ID: ${{ inputs.project-id }}
        ITEM_ID: ${{ inputs.item-id }}
        FIELD_NAME: ${{ inputs.field-name }}
